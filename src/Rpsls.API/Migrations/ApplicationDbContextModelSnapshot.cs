// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rpsls.API.Infrastructure.Data;

#nullable disable

namespace Rpsls.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rpsls.API.Entities.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Choices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Paper"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Scissors"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lizard"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Spock"
                        });
                });

            modelBuilder.Entity("Rpsls.API.Entities.GameOutcome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("LoserId")
                        .HasColumnType("int");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoserId");

                    b.HasIndex("WinnerId");

                    b.ToTable("GameRules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Rock crushes scissors.",
                            LoserId = 3,
                            WinnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Rock crushes lizard.",
                            LoserId = 4,
                            WinnerId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Paper covers rock.",
                            LoserId = 1,
                            WinnerId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Paper disproves Spock.",
                            LoserId = 5,
                            WinnerId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Scissors cuts paper.",
                            LoserId = 2,
                            WinnerId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "Scissors decapitates lizard.",
                            LoserId = 4,
                            WinnerId = 3
                        },
                        new
                        {
                            Id = 7,
                            Description = "Lizard poisons Spock.",
                            LoserId = 5,
                            WinnerId = 4
                        },
                        new
                        {
                            Id = 8,
                            Description = "Lizard eats paper.",
                            LoserId = 2,
                            WinnerId = 4
                        },
                        new
                        {
                            Id = 9,
                            Description = "Spock smashes scissors.",
                            LoserId = 3,
                            WinnerId = 5
                        },
                        new
                        {
                            Id = 10,
                            Description = "Spock vaporizes rock.",
                            LoserId = 1,
                            WinnerId = 5
                        });
                });

            modelBuilder.Entity("Rpsls.API.Entities.GameOutcome", b =>
                {
                    b.HasOne("Rpsls.API.Entities.Choice", "Loser")
                        .WithMany("LosingOutcomes")
                        .HasForeignKey("LoserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Rpsls.API.Entities.Choice", "Winner")
                        .WithMany("WinningOutcomes")
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Loser");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("Rpsls.API.Entities.Choice", b =>
                {
                    b.Navigation("LosingOutcomes");

                    b.Navigation("WinningOutcomes");
                });
#pragma warning restore 612, 618
        }
    }
}
